name: "Test & Release"
on: [push, create]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
    - name: Checkout
      uses: actions/checkout@v1
    - name: Run tests
      run: go test -coverprofile c.out
    - name: Produce coverage report
      run: go tool cover -html=c.out -o coverage.html
    - name: Save coverage report as artifact
      uses: actions/upload-artifact@master
      with:
        name: coverage
        path: coverage.html
  release-linux:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Build on Linux
        working-directory: ${{ github.workspace }}/cmd/gotransit
        run: CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Linux binary artifact to GitHub release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ github.workspace }}/cmd/gotransit/gotransit
          asset_name: gotransit-linux
          asset_label: Linux AMD-64 binary
          asset_content_type: application/binary
  release-macos:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: release-linux # to create the GH release before this runs
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Build on macOS
        working-directory: ${{ github.workspace }}/cmd/gotransit
        run: CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build
      - name: Upload macOS binary artifact to GitHub release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/cmd/gotransit/gotransit
          asset_name: gotransit-macos
          asset_label: macOS AMD-64 binary
          asset_content_type: application/binary